<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PicGo+GitHub+jsDelivr搭建免费CDN图床</title>
      <link href="/posts/CDN/48882.html"/>
      <url>/posts/CDN/48882.html</url>
      
        <content type="html"><![CDATA[<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="一-创建GitHub-图床仓库"><a href="#一-创建GitHub-图床仓库" class="headerlink" title="一.创建GitHub 图床仓库"></a>一.创建GitHub 图床仓库</h2><h3 id="1-登陆GitHub账号，创建新仓库"><a href="#1-登陆GitHub账号，创建新仓库" class="headerlink" title="1.登陆GitHub账号，创建新仓库"></a>1.登陆GitHub账号，创建新仓库</h3><ul><li><p>点击<code>"New repository"</code>按钮</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/3.png" alt=""></p></li><li><p>填写仓库信息，点击<code>Create repository</code>完成创建</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/4.png" alt=""></p></li></ul><h3 id="2-创建-Token-并复制保存"><a href="#2-创建-Token-并复制保存" class="headerlink" title="2.创建 Token 并复制保存"></a>2.创建 Token 并复制保存</h3><ul><li><p>点击自己头像，点击<code>"Settings"</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/5.png" alt=""></p></li><li><p>进入页面后，点击<code>"Developer settings"</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/6.png" alt=""></p></li><li><p>点击<code>"Personal access tokens"</code>，填写描述，选择<code>"repo"</code>权限，然后点击下方的<code>"Generate token"</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/7.png" alt=""></p></li><li><p>创建成功后，会生成一串字符<code>token</code>，这串<code>token</code>只显示一次，所以要好好保存，忘记了只有重新生成，每次都不一样</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/8.png" alt=""></p></li></ul><h2 id="二-配置PicGo-客户端"><a href="#二-配置PicGo-客户端" class="headerlink" title="二.配置PicGo 客户端"></a>二.配置PicGo 客户端</h2><h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h3><ul><li>下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></li><li>Windows 用户请下载最新版本的 <code>exe</code> 文件，macOS 用户请下载最新版本的 <code>dmg</code> 文件，Linux用户请下载 <code>AppImage</code> 文件</li></ul><h3 id="2-配置PicGo图床"><a href="#2-配置PicGo图床" class="headerlink" title="2.配置PicGo图床"></a>2.配置PicGo图床</h3><p>如图：</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/9.png" alt=""></p><ul><li>仓库名格式：“账户名/仓库名”</li><li>分支名：<code>master</code></li><li>Token：之前获得的<code>token</code></li><li>存储路径：填写/img相当于在仓库里建一个img文件夹，也自己可以设定文件夹名字（注意：/img后新建的文件夹要加上<code>/</code>才能生成一个文件夹）</li><li>自定义域名：作用是在上传图片后成功后，<code>PicGo</code>会将“自定义域名+上传的图片名”生成访问链接，因为需要使用jsDelivr加速访问，所以将自定义域名格式设置为<a href="https://cdn.jsdelivr.net/gh/用户名/图床仓库名" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a></li><li>填写完成，点击确认即可开始使用</li></ul><h2 id="三-PicGo其他设置及使用"><a href="#三-PicGo其他设置及使用" class="headerlink" title="三.PicGo其他设置及使用"></a>三.PicGo其他设置及使用</h2><h3 id="1-快捷键及相关配置"><a href="#1-快捷键及相关配置" class="headerlink" title="1.快捷键及相关配置"></a>1.快捷键及相关配置</h3><ul><li><p>默认快捷上传剪切板的键是<code>Clrt+Shift+P</code>，可以自行修改为<code>Clrt+Shift+C</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/10.png" alt=""></p></li><li><p>可以打开上传前重命名，修改上传的图片名，还可以选择在图床设置中只显示GitHub图床</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/11.png" alt=""></p></li><li><p>更多设置可以访问<a href="https://picgo.github.io/PicGo-Doc/zh/guide/" target="_blank" rel="noopener">PicGo官方配置手册</a></p></li></ul><h3 id="2-使用方式"><a href="#2-使用方式" class="headerlink" title="2.使用方式"></a>2.使用方式</h3><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/PicGo-GitHub-jsDelivr/12.png" alt=""></p><ul><li>拖拽图片即可进行上传，完成后再打开自己的github地址，就可以看到上传的图片</li><li>截图（可以使用QQ的快捷键<code>Ctrl+Alt+A</code>截图）之后可用快捷键<code>Ctrl+Shift+P</code>将剪切板上面的截图转化为在线网络图片链接，图片即可自动上传到github对应的repo中，在文档中以使用快捷键<code>Ctrl+V</code>粘贴得到对应的图片地址</li><li>可以选择生成的链接格式，例如<code>Markdown</code>,<code>HTML</code>,<code>URL</code>等</li></ul><h2 id="四-PicGo图片上传失败"><a href="#四-PicGo图片上传失败" class="headerlink" title="四.PicGo图片上传失败"></a>四.PicGo图片上传失败</h2><blockquote><p>出现上传失败出现服务端出错提示，可能是因为文件名有空格，符号（<code>+</code>，<code>%</code>，<code>*</code>）之类的，或者是Github服务器的问题，可以修改文件名或重新上传试试能否上传成功</p></blockquote><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>需要注意的是这个图床是公开的，任何人都能看到，所以不要上传私密照片哦<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
            <tag> GitHub </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《五天学会绘画》学习记录</title>
      <link href="/posts/Drawing/3058.html"/>
      <url>/posts/Drawing/3058.html</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 绘画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> drawing </tag>
            
            <tag> learing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Freenom+Cloudflare+Yandex搭建免费域名邮箱</title>
      <link href="/posts/Email/20237.html"/>
      <url>/posts/Email/20237.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h3 id="1-域名邮箱是什么"><a href="#1-域名邮箱是什么" class="headerlink" title="1.域名邮箱是什么"></a>1.域名邮箱是什么</h3><blockquote><p>域名邮箱简单来说就是以自定义的域名为后缀的电子邮箱，只要将自己的域名跟邮箱绑定，就能拥有以自己域名为后缀的专属邮箱。 Yandex域名邮箱使用方便，比较稳定，收发信成功率也比较高，重点是<strong>免费</strong>，可以设置1000个子邮箱，实现任意邮箱前缀，相当于可以<strong>用无限个邮箱地址</strong></p></blockquote><h3 id="2-域名邮箱有什么用"><a href="#2-域名邮箱有什么用" class="headerlink" title="2.域名邮箱有什么用"></a>2.域名邮箱有什么用</h3><blockquote><p>当要注册各种账号、服务需要用到邮箱时，以及通过邀请用户获得免费使用或者其他优惠时，但同时不想邮箱被各种垃圾邮件填满，也不想随便泄露自己的常用邮箱地址，这时候就可以使用域名邮箱来避免这些问题</p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="一-申请Freenom的免费域名"><a href="#一-申请Freenom的免费域名" class="headerlink" title="一.申请Freenom的免费域名"></a>一.申请Freenom的免费域名</h2><blockquote><p>Freenom 是一个免费域名提供商，提供 <code>.ga</code>, <code>.ml</code>, <code>.gq</code>, <code>.tk</code>, <code>.cf</code> 五个免费域名，和其他众多付费域名。</p><p>注册需要注意：</p><ol><li>最好在全局代理下，并且IP地址为美国</li><li>填写的个人信息使用<a href="http://shenfendaquan.com/" target="_blank" rel="noopener">美国人身份生成器</a></li><li>注册的邮箱最好使用Gmail邮箱</li></ol></blockquote><h3 id="1-选择域名"><a href="#1-选择域名" class="headerlink" title="1.选择域名"></a>1.选择域名</h3><ul><li><p>进入 <a href="http://www.freenom.com/" target="_blank" rel="noopener">Freenom</a>官网，在网站中输入你想要的域名，域名后+<code>tk</code>/<code>ml</code>等，然后点击<code>Check Availability</code>检查可用性</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/1.png" alt=""></p></li><li><p>显示可写<code>Selected</code>后，点击<code>Checkout</code>，并更改<code>Period</code>，把默认的三个月更改成十二个月，点击Continue</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/2.png" alt=""></p></li></ul><h3 id="2-验证邮箱"><a href="#2-验证邮箱" class="headerlink" title="2.验证邮箱"></a>2.验证邮箱</h3><ul><li><p>输入邮箱，点击<code>Verify My Email Address</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/3.png" alt=""></p></li><li><p>进入邮箱查看邮件，并点击邮件中的确认链接</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/4.png" alt=""></p></li></ul><h3 id="3-填写信息"><a href="#3-填写信息" class="headerlink" title="3.填写信息"></a>3.填写信息</h3><ul><li><p>进入填写个人信息页面，搜索<a href="http://shenfendaquan.com/" target="_blank" rel="noopener">美国人身份生成器</a>，填写需要的信息</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/5.1.png" alt=""></p></li><li><p>填写完成，勾选同意协议，点击<code>Complete Order</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/5.2.png" alt=""></p></li></ul><h3 id="4-登陆查看"><a href="#4-登陆查看" class="headerlink" title="4.登陆查看"></a>4.登陆查看</h3><ul><li><p>最后进入登陆界面登陆刚刚注册的账号</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/7.png" alt=""></p></li><li><p>打开首页右上角<code>Services</code>下的<code>My Domains</code>即可看到成功注册的域名了</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/6.png" alt=""></p></li></ul><h2 id="二-使用Cloudflare解析域名"><a href="#二-使用Cloudflare解析域名" class="headerlink" title="二.使用Cloudflare解析域名"></a>二.使用Cloudflare解析域名</h2><blockquote><p>免费且快速的DNS服务，免费的SSL证书，限制某些地区的IP访问等操作，防止网络攻击，支持网站缓存和加速，一个Cloudflare账户可以免费绑定多个网站</p></blockquote><h3 id="1-注册账号"><a href="#1-注册账号" class="headerlink" title="1.注册账号"></a>1.注册账号</h3><ul><li><p>点击<a href="https://dash.cloudflare.com/sign-up" target="_blank" rel="noopener">Cloudflare</a>进入官方注册网址，填写注册邮箱和密码（注册Freenom时的邮箱），点击<code>Create Account</code>注册</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/8.png" alt=""></p></li></ul><h3 id="2-验证邮箱-1"><a href="#2-验证邮箱-1" class="headerlink" title="2.验证邮箱"></a>2.验证邮箱</h3><ul><li><p>到邮箱中，找到<code>Cloudflare</code>发来的验证邮件，点击确认链接，完成验证</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/9.png" alt=""></p></li></ul><h3 id="3-添加站点"><a href="#3-添加站点" class="headerlink" title="3.添加站点"></a>3.添加站点</h3><ul><li><p>点击<a href="https://dash.cloudflare.com/login" target="_blank" rel="noopener">Cloudflare</a>登陆，点击<code>Add a site</code>，输入刚才在<code>Freenom</code>注册的域名<code>fghsyj.tk</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/10.png" alt=""></p></li><li><p>选择<code>Free,$0/month</code>，然后点击<code>Confirm plan</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/11.png" alt=""></p></li><li><p>点击<code>Continue</code>，选择<code>Confirm</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/12.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/13.png" alt=""></p></li><li><p>点击<code>Done,check nameservers</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/14.png" alt=""></p></li><li><p>最后点击<code>Done</code>完成，复制<code>Nameserver 1</code>,<code>Nameserver 2</code>的内容保存，下一步需要用到</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/15.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/16.png" alt=""></p></li></ul><h3 id="4-修改域名服务器"><a href="#4-修改域名服务器" class="headerlink" title="4.修改域名服务器"></a>4.修改域名服务器</h3><ul><li><p>登陆<a href="http://www.freenom.com/" target="_blank" rel="noopener">Freenom</a>网站，进入<code>My Domains</code>,点击<code>Manage Domain</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/17.png" alt=""></p></li><li><p>点击<code>Management Tools</code>下的<code>Nameservers</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/18.png" alt=""></p></li><li><p>点击<code>Use custom nameservers</code>,将之前的到的<code>Nameserver 1</code>,<code>Nameserver 2</code>填入，然后点击<code>Change Nameservers</code>，即可看到成功修改提示</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/19.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/20.png" alt=""></p></li><li><p>等几分钟邮箱即可收<code>Status Active</code>通知，然后登陆<a href="https://dash.cloudflare.com/login" target="_blank" rel="noopener">Cloudflare</a>，在首页能看到域名下方的<code>Active</code>就表示成功完成了</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/21.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/22.png" alt=""></p></li></ul><h2 id="三-注册Yandex域名邮箱"><a href="#三-注册Yandex域名邮箱" class="headerlink" title="三.注册Yandex域名邮箱"></a>三.注册Yandex域名邮箱</h2><blockquote><p>Yandex域名邮箱由大型企业/服务商维护，并可提供1000个自定义前缀邮箱，每个用户10G容量，支持Spf、Dkim，能降低被认证为垃圾邮件的几率</p></blockquote><h3 id="1-注册Yandex邮箱"><a href="#1-注册Yandex邮箱" class="headerlink" title="1.注册Yandex邮箱"></a>1.注册Yandex邮箱</h3><ul><li><p>点击<a href="https://passport.yandex.com/registration" target="_blank" rel="noopener">Yandex</a>进入邮箱注册界面，填写信息，点击<code>Confirm number</code>验证号码，然后点击<code>Register</code>注册，可以使用<code>+86</code>的号码</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/23.png" alt=""></p></li></ul><h3 id="2-注册域名邮箱"><a href="#2-注册域名邮箱" class="headerlink" title="2.注册域名邮箱"></a>2.注册域名邮箱</h3><ul><li><p>点击<a href="https://connect.yandex.com/portal/services/webmaster" target="_blank" rel="noopener">域名邮箱</a>，选择填写你的域名，点击    <code>Accept and connect</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/24.png" alt=""></p></li></ul><h3 id="3-验证域名所有权"><a href="#3-验证域名所有权" class="headerlink" title="3.验证域名所有权"></a>3.验证域名所有权</h3><ul><li><p>选择DNS record，点击<code>cpoy</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/25.png" alt=""></p></li><li><p>登陆<a href="https://dash.cloudflare.com/login" target="_blank" rel="noopener">Cloudflare</a>，点击域名，进入DNS界面，点击<code>Add Record</code>新增一条Type为<code>TXT</code>的记录，Name为<code>@</code>，内容为刚刚的<code>copy</code></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/26.png" alt=""></p></li><li><p>返回域名邮箱，点击<code>Verify domain</code>，然后等待验证通过</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/27.png" alt=""></p></li><li><p>配置MX、SPF与DKIM记录</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/28.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/29.png" alt=""></p><ul><li><p>Type选择<code>CNAME</code>，Name填写<code>Mail</code>，Content填写domain.mail.yandex.net.</p></li><li><p>MX：Type选择<code>MX</code>，Name填写<code>@</code>，Mail server 填写 <code>mx.yandex.net.</code>，Priority 填写 <code>10</code></p></li><li><p>SPF Record：Type选择<code>TXT</code>，Name填写<code>@</code>，Content填写v=spf1 redirect=_spf.yandex.net</p></li><li><p>DKIM signature：Type选择<code>TXT</code>，Name填写mail._domainkey，Content填写图中<code>Copy</code>的内容</p></li></ul></li></ul><h2 id="四-使用域名邮箱"><a href="#四-使用域名邮箱" class="headerlink" title="四.使用域名邮箱"></a>四.使用域名邮箱</h2><ul><li><p>完成上述步骤后，点击侧边栏的<code>Users</code>，点击<code>Add users</code>,填写信息然后点击<code>save</code>就能创建一个域名邮箱了，邮箱登陆名为填写的<code>Username</code>+@你的域名</p><p><img src="https://cdn.jsdelivr.net/gh/jacintheliu/cdn/img/Freenom-Cloudflare-Yandex/31.png" alt=""></p><blockquote><p>注意：新添加的用户需要去登录一次才能正常使用，因为首次登陆需要同意一个协议</p></blockquote></li></ul><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>可以愉快地开始使用无限的邮箱啦<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8">😀</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Freenom </tag>
            
            <tag> Cloudflare </tag>
            
            <tag> Yandex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora+Markdown简明使用方法</title>
      <link href="/posts/typora/19097.html"/>
      <url>/posts/typora/19097.html</url>
      
        <content type="html"><![CDATA[<h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><blockquote><p>Typora是一款免费的轻量级Markdown编辑器，它只使用一个窗口，却能优雅地实现同时将代码编辑与预览「一体化」结合起来！从而为用户带来更加流畅直观的「所见即所得的 Markdown 写作体验」，这也是与其他Markdown编辑器最显著的区别。</p></blockquote><h3 id="一-下载与安装"><a href="#一-下载与安装" class="headerlink" title="一.下载与安装"></a>一.下载与安装</h3><ol><li><p>下载地址：<a href="https://typora.io/" target="_blank" rel="noopener">https://typora.io/</a> </p></li><li><p>安装：点击默认安装，路径可以自由选择</p></li></ol><h3 id="二-Markdown基础语法"><a href="#二-Markdown基础语法" class="headerlink" title="二.Markdown基础语法"></a>二.Markdown基础语法</h3><h4 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h4><p>在想要设置为标题的文字前面加#来表示，一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><pre><code># 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre><h4 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h4><p>字体格式可以设置为<strong>加粗</strong>，<em>斜体</em>，<strong><em>斜体加粗</em></strong>，<del>删除线</del>，<u>下划线</u>，文本居中</p><p>示例：</p><pre><code>**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~下划线：&lt;u&gt;这是需要下划线的内容&lt;/u&gt; 或者快捷键Ctrl+U文本居中：&lt;center&gt;这是要居中的文本内容&lt;/center&gt;</code></pre><h4 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h4><p>引用需要在被引用的文本前加上&gt;符号，引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;</p><p>示例：</p><pre><code>&gt; 一级引用&gt;&gt; 二级引用&gt;&gt;&gt; 三级引用</code></pre><h4 id="4-分隔线"><a href="#4-分隔线" class="headerlink" title="4.分隔线"></a>4.分隔线</h4><p>在一行中用三个以上的星号、减号、底线建立分隔线</p><p>示例：</p><pre><code>***----_____</code></pre><h4 id="5-列表"><a href="#5-列表" class="headerlink" title="5.列表"></a>5.列表</h4><ul><li><p>无序列表</p><p>示例：</p><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre></li><li><p>有序列表</p><p>示例：</p><pre><code>1. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格</code></pre></li><li><p>列表嵌套</p><p>示例：</p><pre><code>* 无序列表（Tab）* 无序列表（Tab）（Tab）* 无序列表</code></pre></li></ul><h4 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6.超链接"></a>6.超链接</h4><ul><li><p>文本链接：<a href="https://jacintheliu.tk">博客</a></p><p>示例：</p><pre><code>[博客](https://jacintheliu.tk)</code></pre></li><li><p>地址链接</p><p>示例：<a href="https://jacintheliu.tk/">https://jacintheliu.tk/</a></p><pre><code>&lt;https://jacintheliu.tk/&gt;</code></pre></li></ul><h4 id="7-代码"><a href="#7-代码" class="headerlink" title="7.代码"></a>7.代码</h4><ul><li><p>单行代码：代码之间分别用一个反引号`包起来</p><p>示例：</p><pre><code>`代码内容`</code></pre></li><li><p>代码块：代码之间分别用三个反引号```包起来，且两边的反引号单独占一行</p><p>示例：</p><pre class=" language-go"><code class="language-go"><span class="token string">``</span><span class="token string">`  代码...  代码...  代码...`</span><span class="token string">``</span></code></pre></li></ul><h4 id="8-插入图片"><a href="#8-插入图片" class="headerlink" title="8.插入图片"></a>8.插入图片</h4><p>语法：</p><pre><code>![图片alt](图片地址 ''图片title'')图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</code></pre><h4 id="9-插入表格"><a href="#9-插入表格" class="headerlink" title="9.插入表格"></a>9.插入表格</h4><p>语法：</p><pre><code>表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右</code></pre><h4 id="10-其他"><a href="#10-其他" class="headerlink" title="10.其他"></a>10.其他</h4><ul><li><p>表情符号</p><p>支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情，😀</p><p>示例：</p><pre><code>:smile:（英文的冒号）</code></pre></li><li><p>下标</p><p>使用<code>~</code>来包裹下标内容，H<sub>2</sub>O</p><p>示例：</p><pre><code>H~2~O</code></pre></li><li><p>上标</p><p>使用<code>^</code>包裹上标内容，X<sup>2</sup></p><p>示例：</p><pre><code>X^2^</code></pre></li><li><p>高亮</p><p>使用<code>==</code>包裹突出的内容，<mark>highlight</mark></p><p>示例：</p><pre><code>==highlight==</code></pre></li></ul><p>（注意：上标，下标和高亮功能需在Typora文件的偏好设置Markdown界面开启，并重启Typora才能生效）</p><p>（记录：若要在hexo博客文章中显示上标，下标和高亮需要使用markdown语法，示例：<code>X&lt;sup&gt;2&lt;/sup&gt;</code>，<code>H&lt;sub&gt;2&lt;/sub&gt;O</code>，<code>&lt;mark&gt;highlight&lt;/mark&gt;</code>）</p><h3 id="三-快捷键整理"><a href="#三-快捷键整理" class="headerlink" title="三.快捷键整理"></a>三.快捷键整理</h3><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>新建文档</td><td>CTRL+N(New)</td></tr><tr><td>打开文档</td><td>CTRL+O(Open)</td></tr><tr><td>快速打开文档</td><td>CTRL+P</td></tr><tr><td>保存/另存为</td><td>CTRL+S/CTRL+shift+S</td></tr><tr><td>剪切/重做/撤销</td><td>CTRL+Y/CTRL+Z</td></tr><tr><td>剪切/复制/粘贴</td><td>CTRL+X/+CTRL+C/CTRL+V</td></tr><tr><td>复制为Markdown</td><td>CTRL+shift+C</td></tr><tr><td>粘贴为纯文本</td><td>CTRL+shift+V</td></tr><tr><td>全选</td><td>CTRL+A（All）</td></tr><tr><td>选中当前词</td><td>CTRL+D</td></tr><tr><td>删除当前词</td><td>CTRL+shift+D</td></tr><tr><td>查找/替换</td><td>CTRL+F(Find)/CTRL+H</td></tr><tr><td>标题</td><td>CTRL+1/2/3/4/5/6（数字代表标题级数）</td></tr><tr><td>提升标题级别/降低标题级别</td><td>CTRL+=/CTRL+-</td></tr><tr><td>段落</td><td>Ctrl+0</td></tr><tr><td>插入表格</td><td>CTRL+T（Table）</td></tr><tr><td>下方插入行</td><td>CTRL+Enter</td></tr><tr><td>上移该行/下移该行</td><td>Alt+向上/向下箭头</td></tr><tr><td>代码块</td><td>CTRL+shift+K</td></tr><tr><td>公式块</td><td>CTRL+shift+M</td></tr><tr><td>引用</td><td>CTRL+shift+Q</td></tr><tr><td>有序列表</td><td>CTRL+shift+[</td></tr><tr><td>无序列表</td><td>CTRL+shift+]</td></tr><tr><td>增加缩进</td><td>Ctrl+]</td></tr><tr><td>减少缩进</td><td>CTRL+[</td></tr><tr><td>加粗</td><td>CTRL+B（Blod）</td></tr><tr><td>斜体</td><td>CTRL+I（Italic）</td></tr><tr><td>下划线</td><td>CTRL+U（Underline）</td></tr><tr><td>代码</td><td>CTRL+shift+`（这个符号按键在Tab键上，表示反引号）</td></tr><tr><td>删除线</td><td>Alt+shift+5</td></tr><tr><td>超链接</td><td>CTRL+K（Hyperlink）</td></tr><tr><td>清除样式</td><td>CTRL+\</td></tr><tr><td>专注模式</td><td>F8</td></tr><tr><td>打字机模式（Typora 的光标所在行会始终保持在屏幕中间）</td><td>F9</td></tr><tr><td>切换全屏</td><td>F11</td></tr></tbody></table><h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><p>暂时需要这么多，以后还有用得到的语法再加上吧<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">😊</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typora </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github+Matery搭建个人博客记录</title>
      <link href="/posts/hexo-blog/31905.html"/>
      <url>/posts/hexo-blog/31905.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> 一直想建一个博客记录自己学到的杂七杂八的知识，但需要购买域名和服务器来搭建博客的成本太高，于是就有了这个基于Hexo和Github搭建的完全免费的博客，搭建过程可以参考<a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank" rel="noopener">这位大佬</a>的博客，可以说是非常详细了，本文主要是记录自己的配置和一些搭建过程中遇到的问题</p><blockquote><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是基于<code>NodeJs</code>的静态博客框架，简单、轻量，其生成的静态网页可以托管在<code>Github</code>上。</p><ul><li>超快速度</li><li>支持MarkDown</li><li>一键部署</li><li>丰富的插件</li></ul></blockquote><h2 id="一-安装Hexo"><a href="#一-安装Hexo" class="headerlink" title="一.安装Hexo"></a>一.安装Hexo</h2><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><ul><li><p>下载地址：<a href="https://git-scm.com/downloads，安装参考[教程](https://juejin.im/post/5c922e226fb9a070ca10351b)" target="_blank" rel="noopener">https://git-scm.com/downloads，安装参考[教程](https://juejin.im/post/5c922e226fb9a070ca10351b)</a></p></li><li><p>安装完成后在命令提示符中输入<code>git --version</code>查看一下版本验证是否安装成功</p></li></ul><h3 id="2-安装Node环境"><a href="#2-安装Node环境" class="headerlink" title="2.安装Node环境"></a>2.安装Node环境</h3><ul><li>下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a> ，安装直接使用默认安装即可</li><li>安装完后，打开命令行终端，输入<code>node -v</code>，<code>npm -v</code>查看一下版本验证是否安装成功</li></ul><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><ul><li><p>创建博客文件夹，在文件夹目录下，点击即<code>Git Bash Here</code>输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code></p><ul><li>安装完后输入<code>hexo -v</code>验证是否安装成功</li></ul></li><li><p>继续在<code>Git Bash Here</code>下依次输入以下命令，初始化<code>hexo</code></p><pre><code>$ hexo init &lt;folder&gt;（folder自己命名）$ cd &lt;folder&gt;$ npm install</code></pre></li><li><p>新建完成后，在folder下，会产生这些文件和文件夹</p><ul><li><code>node_modules:</code> 依赖包</li><li><code>public：</code>存放生成的页面</li><li><code>scaffolds：</code>生成文章的一些模板</li><li><code>source：</code>用来存放你的文章</li><li><code>themes：</code>主题</li><li><code>_config.yml:</code> 博客的配置文件</li></ul></li><li><p>继续在<code>Git Bash Here</code>下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>，Hexo博客已经搭建在本地，博客网址为：<a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/</a>，按<code>ctrl+c</code>即可关闭</p></li></ul><h2 id="二-配置Github"><a href="#二-配置Github" class="headerlink" title="二.配置Github"></a>二.配置Github</h2><h3 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1.创建仓库"></a>1.创建仓库</h3><p>创建一个’’<code>github</code>用户名.github.io”的public仓库</p><h3 id="2-生成SSH添加到GitHub"><a href="#2-生成SSH添加到GitHub" class="headerlink" title="2.生成SSH添加到GitHub"></a>2.生成SSH添加到GitHub</h3><p>生成<code>SSH</code>添加到<code>GitHub</code>，连接<code>Github</code>与本地，具体参考<a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-3" target="_blank" rel="noopener">教程</a></p><h3 id="3-将Hexo部署到GitHub"><a href="#3-将Hexo部署到GitHub" class="headerlink" title="3.将Hexo部署到GitHub"></a>3.将Hexo部署到GitHub</h3><ul><li>博客根目录下的<code>_config.yml</code>文件中配置deploy</li></ul><pre><code>deploy:  type: git  repo: &lt;repository url&gt;  branch: [branch]</code></pre><blockquote><p><code>branch</code>为分支，默认为<code>master</code>,<code>repo</code>为仓库地址</p></blockquote><ul><li><p>安装<code>deploy-git</code>,    在博客根目录下<code>Git Bash Here</code>依次输入：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --savehexo cleanhexo generatehexo deploy</code></pre></li></ul><blockquote><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p></blockquote><h3 id="4-设置个人域名"><a href="#4-设置个人域名" class="headerlink" title="4. 设置个人域名"></a>4. 设置个人域名</h3><ul><li>打开<code>github</code>博客仓库，点击<code>settings</code>，拉到下面<code>Custom domain</code>处，填上自己的域名，记得勾选Enforce Https</li></ul><h3 id="三-个性化设置（matery主题）"><a href="#三-个性化设置（matery主题）" class="headerlink" title="三.个性化设置（matery主题）"></a>三.个性化设置（matery主题）</h3><h3 id="1-下载更换主题"><a href="#1-下载更换主题" class="headerlink" title="1.下载更换主题"></a>1.下载更换主题</h3><ul><li>主题地址：<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a></li><li>主题安装教程：<a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/" target="_blank" rel="noopener">闪烁之狐</a></li><li>主题特性：<ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul></li></ul><h3 id="2-个性化配置"><a href="#2-个性化配置" class="headerlink" title="2.个性化配置"></a>2.个性化配置</h3><h4 id="2-1文章模板-scaffolds-post-md修改"><a href="#2-1文章模板-scaffolds-post-md修改" class="headerlink" title="2.1文章模板/scaffolds/post.md修改"></a>2.1文章模板<code>/scaffolds/post.md</code>修改</h4><pre class=" language-json"><code class="language-json">---title<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">}</span>date<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> date <span class="token punctuation">}</span><span class="token punctuation">}</span>urlname<span class="token operator">:</span>author<span class="token operator">:</span> img<span class="token operator">:</span> coverImg<span class="token operator">:</span> top<span class="token operator">:</span> <span class="token boolean">false</span>cover<span class="token operator">:</span> <span class="token boolean">false</span>toc<span class="token operator">:</span> <span class="token boolean">true</span>mathjax<span class="token operator">:</span> <span class="token boolean">false</span>password<span class="token operator">:</span>summary<span class="token operator">:</span>tags<span class="token operator">:</span>categories<span class="token operator">:</span>---</code></pre><h4 id="2-2添加公益404"><a href="#2-2添加公益404" class="headerlink" title="2.2添加公益404"></a>2.2添加公益404</h4><ul><li><p>进入本地hexo目录，点击<code>Git Bash Here</code>输入<code>hexo new page 404</code></p></li><li><p>打开刚新建的页面文件，默认在 Hexo 文件夹根目录下 /source/404/index.md ，输入以下代码：</p></li><li><p>然后输入<code>hexo g</code>，<code>hexo d</code>，部署上传就可以了</p><pre><code>---title: 404 Not Found：该页无法显示toc: falsecomments: falsepermalink: /404---&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;         &lt;meta charset="UTF-8" /&gt;         &lt;title&gt;404&lt;/title&gt;                                                                                                                                            &lt;/head&gt;    &lt;body&gt;         &lt;script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" homePageName="返回首页" homePageUrl="https://www.nickyam.com"&gt;&lt;/script&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre></li></ul><h4 id="2-3添加gittalk评论"><a href="#2-3添加gittalk评论" class="headerlink" title="2.3添加gittalk评论"></a>2.3添加<code>gittalk</code>评论</h4><ul><li>创建 Github Application，申请地址：<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a></li><li>获取 <code>Client ID</code> 和 <code>Client Secret</code> 填入主题自带的 Gitalk 参数中</li></ul><h4 id="2-5代码高亮"><a href="#2-5代码高亮" class="headerlink" title="2.5代码高亮"></a>2.5代码高亮</h4><ul><li><p>安装命令</p><pre><code>npm i -S hexo-prism-plugin</code></pre></li><li><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre></li></ul><h4 id="2-6文章字数统计插件"><a href="#2-6文章字数统计插件" class="headerlink" title="2.6文章字数统计插件"></a>2.6文章字数统计插件</h4><ul><li><p>安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件：</p><pre><code>npm i --save hexo-wordcount</code></pre></li><li><p>然后只需在主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">wordCount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 将这个值设置为 true 即可.</span>  <span class="token key atrule">postWordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre></li></ul><h4 id="2-7添加-RSS-订阅支持"><a href="#2-7添加-RSS-订阅支持" class="headerlink" title="2.7添加 RSS 订阅支持"></a>2.7添加 RSS 订阅支持</h4><ul><li><p>安装命令：</p><pre><code>npm install hexo-generator-feed --save</code></pre></li><li><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre></li><li><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明安装成功</p></li></ul><h4 id="2-8增加emoji支持"><a href="#2-8增加emoji支持" class="headerlink" title="2.8增加emoji支持"></a>2.8增加emoji支持</h4><ul><li><p>安装命令：</p><pre><code>npm install hexo-filter-github-emojis --save</code></pre></li><li><p>Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span> <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token key atrule">styles</span><span class="token punctuation">:</span> customEmojis<span class="token punctuation">:</span></code></pre></li></ul><h4 id="2-9添加博客动态标签"><a href="#2-9添加博客动态标签" class="headerlink" title="2.9添加博客动态标签"></a>2.9添加博客动态标签</h4><ul><li><p>打开博客主题文件夹，路径：<code>themes/matery/layout/layout.ejs</code>，在对应位置添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span>        st<span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"看不见我🙈~看不见我🙈~"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span>            <span class="token string">"(๑•̀ㅂ•́) ✧被发现了～"</span><span class="token punctuation">,</span> st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li></ul><h4 id="2-10更改导航栏颜色"><a href="#2-10更改导航栏颜色" class="headerlink" title="2.10更改导航栏颜色"></a>2.10更改导航栏颜色</h4><ul><li><p>在主题文件的theme/matery /source/css/matery.css 文件中，搜索 <code>.bg-color</code>来修改背景颜色：</p><pre><code>.bg-color {   /* background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);*/   background:#000B3F;}</code></pre></li></ul><h4 id="2-11修改导航栏右上角github角标颜色"><a href="#2-11修改导航栏右上角github角标颜色" class="headerlink" title="2.11修改导航栏右上角github角标颜色"></a>2.11修改导航栏右上角github角标颜色</h4><ul><li><p>打开themes/matery/layout/_partial/github-link.ejs文件(第十五行)修改<code>color</code>属性就可以随心所欲的改变github角标的颜色</p><pre><code>.github-corner svg {        color: #F062A7;        fill: #fff;        height: 64px;        width: 64px;    }</code></pre></li></ul><h4 id="2-12取消蒙版特效"><a href="#2-12取消蒙版特效" class="headerlink" title="2.12取消蒙版特效"></a>2.12取消蒙版特效</h4><ul><li><p>在主题文件的 theme/matery /source/css/matery.css 文件中，搜索<code>.bg-cover:after</code>注释它：</p><pre><code>/*.bg-cover:after {    -webkit-animation: rainbow 60s infinite;    animation: rainbow 60s infinite;}*/</code></pre></li></ul><h4 id="2-13优化url"><a href="#2-13优化url" class="headerlink" title="2.13优化url"></a>2.13优化url</h4><ul><li><p>安装<code>hexo-abbrlink</code></p><pre><code>npm install hexo-abbrlink --save</code></pre></li><li><p>配置博客根目录下的_config.yml文件:</p><pre><code># permalink: :title/permalink: archives/:abbrlink.htmlabbrlink:  alg: crc32  # 算法：crc16(default) and crc32  rep: hex    # 进制：dec(default) and hex</code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/HelloWorld/16107.html"/>
      <url>/posts/HelloWorld/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
